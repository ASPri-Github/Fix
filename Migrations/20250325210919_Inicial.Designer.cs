// <auto-generated />
using System;
using ApisConvenciones9.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApisConvenciones9.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250325210919_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApisConvenciones9.Models.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoria_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Especificaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Evento_IdId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Categoria_IdId");

                    b.HasIndex("Evento_IdId");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Categoria_Actividades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cat_Actividades");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Categoria_Recomendacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cat_Recomendaciones");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Categoria_Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cat_Usuarios");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Convencionista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaUsuario_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Evento_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerfilUsuario_idId")
                        .HasColumnType("int");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaUsuario_IdId");

                    b.HasIndex("Evento_IdId");

                    b.HasIndex("PerfilUsuario_idId");

                    b.ToTable("Convencionistas");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreConvencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Evento_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreHotel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Evento_IdId");

                    b.ToTable("Hoteles");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Perfil_Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Perfil_Usuario");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Evento_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Evento_IdId");

                    b.ToTable("Pregunta");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Recomendacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaRecomendacion_IdId")
                        .HasColumnType("int");

                    b.Property<int>("Evento_IdId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Informacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaRecomendacion_IdId");

                    b.HasIndex("Evento_IdId");

                    b.ToTable("Recomendaciones");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pregunta_IdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Pregunta_IdId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Version_App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token_Map_Box")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version_Android")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version_IOs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Versiones_App");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Vuelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Evento_IdId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Vuelo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hora_Llegada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hora_Salida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lugar_Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lugar_Origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_Vuelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reservacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Evento_IdId");

                    b.ToTable("Vuelos");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Actividad", b =>
                {
                    b.HasOne("ApisConvenciones9.Models.Categoria_Actividades", "Categoria_Id")
                        .WithMany()
                        .HasForeignKey("Categoria_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApisConvenciones9.Models.Evento", "Evento_Id")
                        .WithMany()
                        .HasForeignKey("Evento_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria_Id");

                    b.Navigation("Evento_Id");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Convencionista", b =>
                {
                    b.HasOne("ApisConvenciones9.Models.Categoria_Usuario", "CategoriaUsuario_Id")
                        .WithMany()
                        .HasForeignKey("CategoriaUsuario_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApisConvenciones9.Models.Evento", "Evento_Id")
                        .WithMany()
                        .HasForeignKey("Evento_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApisConvenciones9.Models.Perfil_Usuario", "PerfilUsuario_id")
                        .WithMany()
                        .HasForeignKey("PerfilUsuario_idId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaUsuario_Id");

                    b.Navigation("Evento_Id");

                    b.Navigation("PerfilUsuario_id");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Hotel", b =>
                {
                    b.HasOne("ApisConvenciones9.Models.Evento", "Evento_Id")
                        .WithMany()
                        .HasForeignKey("Evento_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento_Id");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Pregunta", b =>
                {
                    b.HasOne("ApisConvenciones9.Models.Evento", "Evento_Id")
                        .WithMany()
                        .HasForeignKey("Evento_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento_Id");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Recomendacion", b =>
                {
                    b.HasOne("ApisConvenciones9.Models.Categoria_Recomendacion", "CategoriaRecomendacion_Id")
                        .WithMany()
                        .HasForeignKey("CategoriaRecomendacion_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApisConvenciones9.Models.Evento", "Evento_Id")
                        .WithMany()
                        .HasForeignKey("Evento_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaRecomendacion_Id");

                    b.Navigation("Evento_Id");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Respuesta", b =>
                {
                    b.HasOne("ApisConvenciones9.Models.Pregunta", "Pregunta_Id")
                        .WithMany("Respuestas")
                        .HasForeignKey("Pregunta_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregunta_Id");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Vuelo", b =>
                {
                    b.HasOne("ApisConvenciones9.Models.Evento", "Evento_Id")
                        .WithMany()
                        .HasForeignKey("Evento_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento_Id");
                });

            modelBuilder.Entity("ApisConvenciones9.Models.Pregunta", b =>
                {
                    b.Navigation("Respuestas");
                });
#pragma warning restore 612, 618
        }
    }
}
